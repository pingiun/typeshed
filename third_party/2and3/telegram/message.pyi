# Stubs for telegram.message (Python 3.7)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

from telegram import TelegramObject
from typing import Any, Optional

class Message(TelegramObject):
    ATTACHMENT_TYPES: Any = ...
    MESSAGE_TYPES: Any = ...
    message_id: Any = ...
    from_user: Any = ...
    date: Any = ...
    chat: Any = ...
    forward_from: Any = ...
    forward_from_chat: Any = ...
    forward_date: Any = ...
    reply_to_message: Any = ...
    edit_date: Any = ...
    text: Any = ...
    entities: Any = ...
    caption_entities: Any = ...
    audio: Any = ...
    game: Any = ...
    document: Any = ...
    photo: Any = ...
    sticker: Any = ...
    video: Any = ...
    voice: Any = ...
    video_note: Any = ...
    caption: Any = ...
    contact: Any = ...
    location: Any = ...
    venue: Any = ...
    new_chat_members: Any = ...
    left_chat_member: Any = ...
    new_chat_title: Any = ...
    new_chat_photo: Any = ...
    delete_chat_photo: Any = ...
    group_chat_created: Any = ...
    supergroup_chat_created: Any = ...
    migrate_to_chat_id: Any = ...
    migrate_from_chat_id: Any = ...
    channel_chat_created: Any = ...
    pinned_message: Any = ...
    forward_from_message_id: Any = ...
    invoice: Any = ...
    successful_payment: Any = ...
    connected_website: Any = ...
    forward_signature: Any = ...
    author_signature: Any = ...
    media_group_id: Any = ...
    animation: Any = ...
    passport_data: Any = ...
    bot: Any = ...
    def __init__(self, message_id: Any, from_user: Any, date: Any, chat: Any, forward_from: Optional[Any] = ..., forward_from_chat: Optional[Any] = ..., forward_from_message_id: Optional[Any] = ..., forward_date: Optional[Any] = ..., reply_to_message: Optional[Any] = ..., edit_date: Optional[Any] = ..., text: Optional[Any] = ..., entities: Optional[Any] = ..., caption_entities: Optional[Any] = ..., audio: Optional[Any] = ..., document: Optional[Any] = ..., game: Optional[Any] = ..., photo: Optional[Any] = ..., sticker: Optional[Any] = ..., video: Optional[Any] = ..., voice: Optional[Any] = ..., video_note: Optional[Any] = ..., new_chat_members: Optional[Any] = ..., caption: Optional[Any] = ..., contact: Optional[Any] = ..., location: Optional[Any] = ..., venue: Optional[Any] = ..., left_chat_member: Optional[Any] = ..., new_chat_title: Optional[Any] = ..., new_chat_photo: Optional[Any] = ..., delete_chat_photo: bool = ..., group_chat_created: bool = ..., supergroup_chat_created: bool = ..., channel_chat_created: bool = ..., migrate_to_chat_id: Optional[Any] = ..., migrate_from_chat_id: Optional[Any] = ..., pinned_message: Optional[Any] = ..., invoice: Optional[Any] = ..., successful_payment: Optional[Any] = ..., forward_signature: Optional[Any] = ..., author_signature: Optional[Any] = ..., media_group_id: Optional[Any] = ..., connected_website: Optional[Any] = ..., animation: Optional[Any] = ..., passport_data: Optional[Any] = ..., bot: Optional[Any] = ..., **kwargs: Any) -> None: ...
    @property
    def chat_id(self): ...
    @property
    def link(self): ...
    @classmethod
    def de_json(cls, data: Any, bot: Any): ...
    @property
    def effective_attachment(self): ...
    def __getitem__(self, item: Any): ...
    def to_dict(self): ...
    def reply_text(self, *args: Any, **kwargs: Any): ...
    def reply_markdown(self, *args: Any, **kwargs: Any): ...
    def reply_html(self, *args: Any, **kwargs: Any): ...
    def reply_media_group(self, *args: Any, **kwargs: Any): ...
    def reply_photo(self, *args: Any, **kwargs: Any): ...
    def reply_audio(self, *args: Any, **kwargs: Any): ...
    def reply_document(self, *args: Any, **kwargs: Any): ...
    def reply_animation(self, *args: Any, **kwargs: Any): ...
    def reply_sticker(self, *args: Any, **kwargs: Any): ...
    def reply_video(self, *args: Any, **kwargs: Any): ...
    def reply_video_note(self, *args: Any, **kwargs: Any): ...
    def reply_voice(self, *args: Any, **kwargs: Any): ...
    def reply_location(self, *args: Any, **kwargs: Any): ...
    def reply_venue(self, *args: Any, **kwargs: Any): ...
    def reply_contact(self, *args: Any, **kwargs: Any): ...
    def forward(self, chat_id: Any, disable_notification: bool = ...): ...
    def edit_text(self, *args: Any, **kwargs: Any): ...
    def edit_caption(self, *args: Any, **kwargs: Any): ...
    def edit_media(self, media: Any, *args: Any, **kwargs: Any): ...
    def edit_reply_markup(self, *args: Any, **kwargs: Any): ...
    def delete(self, *args: Any, **kwargs: Any): ...
    def parse_entity(self, entity: Any): ...
    def parse_caption_entity(self, entity: Any): ...
    def parse_entities(self, types: Optional[Any] = ...): ...
    def parse_caption_entities(self, types: Optional[Any] = ...): ...
    @property
    def text_html(self): ...
    @property
    def text_html_urled(self): ...
    @property
    def caption_html(self): ...
    @property
    def caption_html_urled(self): ...
    @property
    def text_markdown(self): ...
    @property
    def text_markdown_urled(self): ...
    @property
    def caption_markdown(self): ...
    @property
    def caption_markdown_urled(self): ...
