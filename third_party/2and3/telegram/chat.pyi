# Stubs for telegram.chat (Python 3.7)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

from telegram import TelegramObject, Bot, ChatMember, ChatPhoto, Message
from typing import Any, Optional

class Chat(TelegramObject):
    PRIVATE: str = ...
    GROUP: str = ...
    SUPERGROUP: str = ...
    CHANNEL: str = ...
    id: int = ...
    type: str = ...
    title: str = ...
    username: str = ...
    first_name: str = ...
    last_name: str = ...
    all_members_are_administrators: bool = ...
    photo: ChatPhoto = ...
    description: str = ...
    invite_link: str = ...
    pinned_message: Message = ...
    sticker_set_name: str = ...
    can_set_sticker_set: bool = ...
    bot: Bot = ...
    def __init__(self, id: int, type: str, title: Optional[str] = ..., username: Optional[str] = ..., first_name: Optional[str] = ..., last_name: Optional[str] = ..., all_members_are_administrators: Optional[bool] = ..., bot: Optional[Bot] = ..., photo: Optional[ChatPhoto] = ..., description: Optional[str] = ..., invite_link: Optional[str] = ..., pinned_message: Optional[Message] = ..., sticker_set_name: Optional[str] = ..., can_set_sticker_set: Optional[bool] = ..., **kwargs: Any) -> None: ...
    @property
    def link(self) -> str: ...
    @classmethod
    def de_json(cls, data: Dict, bot: Bot) -> Chat: ...
    def send_action(self, *args: Any, **kwargs: Any) -> bool: ...
    def leave(self, *args: Any, **kwargs: Any) -> bool: ...
    def get_administrators(self, *args: Any, **kwargs: Any) -> List[ChatMember]: ...
    def get_members_count(self, *args: Any, **kwargs: Any) -> int: ...
    def get_member(self, *args: Any, **kwargs: Any) -> ChatMember: ...
    def kick_member(self, *args: Any, **kwargs: Any) -> bool: ...
    def unban_member(self, *args: Any, **kwargs: Any) -> bool: ...
    def send_message(self, *args: Any, **kwargs: Any) -> Message: ...
    def send_photo(self, *args: Any, **kwargs: Any) -> Message: ...
    def send_audio(self, *args: Any, **kwargs: Any) -> Message: ...
    def send_document(self, *args: Any, **kwargs: Any) -> Message: ...
    def send_animation(self, *args: Any, **kwargs: Any) -> Message: ...
    def send_sticker(self, *args: Any, **kwargs: Any) -> Message: ...
    def send_video(self, *args: Any, **kwargs: Any) -> Message: ...
    def send_video_note(self, *args: Any, **kwargs: Any) -> Message: ...
    def send_voice(self, *args: Any, **kwargs: Any) -> Message: ...
