# Stubs for telegram.files.sticker (Python 3.7)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

from telegram import TelegramObject
from typing import Any, Optional

class Sticker(TelegramObject):
    file_id: Any = ...
    width: Any = ...
    height: Any = ...
    thumb: Any = ...
    emoji: Any = ...
    file_size: Any = ...
    set_name: Any = ...
    mask_position: Any = ...
    bot: Any = ...
    def __init__(self, file_id: Any, width: Any, height: Any, thumb: Optional[Any] = ..., emoji: Optional[Any] = ..., file_size: Optional[Any] = ..., set_name: Optional[Any] = ..., mask_position: Optional[Any] = ..., bot: Optional[Any] = ..., **kwargs: Any) -> None: ...
    @classmethod
    def de_json(cls, data: Any, bot: Any): ...
    @classmethod
    def de_list(cls, data: Any, bot: Any): ...
    def get_file(self, timeout: Optional[Any] = ..., **kwargs: Any): ...

class StickerSet(TelegramObject):
    name: Any = ...
    title: Any = ...
    contains_masks: Any = ...
    stickers: Any = ...
    def __init__(self, name: Any, title: Any, contains_masks: Any, stickers: Any, bot: Optional[Any] = ..., **kwargs: Any) -> None: ...
    @staticmethod
    def de_json(data: Any, bot: Any): ...
    def to_dict(self): ...

class MaskPosition(TelegramObject):
    FOREHEAD: str = ...
    EYES: str = ...
    MOUTH: str = ...
    CHIN: str = ...
    point: Any = ...
    x_shift: Any = ...
    y_shift: Any = ...
    scale: Any = ...
    def __init__(self, point: Any, x_shift: Any, y_shift: Any, scale: Any, **kwargs: Any) -> None: ...
    @classmethod
    def de_json(cls, data: Any, bot: Any): ...
