# Stubs for telegram.passport.credentials (Python 3.7)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

from telegram import TelegramError, TelegramObject
from typing import Any, Optional

class TelegramDecryptionError(TelegramError):
    def __init__(self, message: Any) -> None: ...

def decrypt(secret: Any, hash: Any, data: Any): ...
def decrypt_json(secret: Any, hash: Any, data: Any): ...

class EncryptedCredentials(TelegramObject):
    data: Any = ...
    hash: Any = ...
    secret: Any = ...
    bot: Any = ...
    def __init__(self, data: Any, hash: Any, secret: Any, bot: Optional[Any] = ..., **kwargs: Any) -> None: ...
    @classmethod
    def de_json(cls, data: Any, bot: Any): ...
    @property
    def decrypted_secret(self): ...
    @property
    def decrypted_data(self): ...

class Credentials(TelegramObject):
    secure_data: Any = ...
    nonce: Any = ...
    bot: Any = ...
    def __init__(self, secure_data: Any, nonce: Any, bot: Optional[Any] = ..., **kwargs: Any) -> None: ...
    @classmethod
    def de_json(cls, data: Any, bot: Any): ...

class SecureData(TelegramObject):
    temporary_registration: Any = ...
    passport_registration: Any = ...
    rental_agreement: Any = ...
    bank_statement: Any = ...
    utility_bill: Any = ...
    address: Any = ...
    identity_card: Any = ...
    driver_license: Any = ...
    internal_passport: Any = ...
    passport: Any = ...
    personal_details: Any = ...
    bot: Any = ...
    def __init__(self, personal_details: Optional[Any] = ..., passport: Optional[Any] = ..., internal_passport: Optional[Any] = ..., driver_license: Optional[Any] = ..., identity_card: Optional[Any] = ..., address: Optional[Any] = ..., utility_bill: Optional[Any] = ..., bank_statement: Optional[Any] = ..., rental_agreement: Optional[Any] = ..., passport_registration: Optional[Any] = ..., temporary_registration: Optional[Any] = ..., bot: Optional[Any] = ..., **kwargs: Any) -> None: ...
    @classmethod
    def de_json(cls, data: Any, bot: Any): ...

class SecureValue(TelegramObject):
    data: Any = ...
    front_side: Any = ...
    reverse_side: Any = ...
    selfie: Any = ...
    files: Any = ...
    translation: Any = ...
    bot: Any = ...
    def __init__(self, data: Optional[Any] = ..., front_side: Optional[Any] = ..., reverse_side: Optional[Any] = ..., selfie: Optional[Any] = ..., files: Optional[Any] = ..., translation: Optional[Any] = ..., bot: Optional[Any] = ..., **kwargs: Any) -> None: ...
    @classmethod
    def de_json(cls, data: Any, bot: Any): ...
    def to_dict(self): ...

class _CredentialsBase(TelegramObject):
    hash: Any = ...
    secret: Any = ...
    file_hash: Any = ...
    data_hash: Any = ...
    bot: Any = ...
    def __init__(self, hash: Any, secret: Any, bot: Optional[Any] = ..., **kwargs: Any) -> None: ...
    @classmethod
    def de_json(cls, data: Any, bot: Any): ...
    @classmethod
    def de_list(cls, data: Any, bot: Any): ...

class DataCredentials(_CredentialsBase):
    def __init__(self, data_hash: Any, secret: Any, **kwargs: Any) -> None: ...
    def to_dict(self): ...

class FileCredentials(_CredentialsBase):
    def __init__(self, file_hash: Any, secret: Any, **kwargs: Any) -> None: ...
    def to_dict(self): ...
